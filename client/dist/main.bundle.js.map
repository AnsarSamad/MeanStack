{"version":3,"sources":["webpack:///./src/app/controller/stories.component.ts","webpack:///./src/app/model/feature.ts","webpack:///./src/app/service/addevent.service.ts","webpack:///./src/app/service/event.service.ts","webpack:///./src/app/service/story.service.ts","webpack:///./src/app/task/addtask.service.ts","webpack:///./src/app/task/task.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/base/firebaseConfig.ts","webpack:///./src/app/base/systemConstant.ts","webpack:///./src/app/controller/add-new-stories.component.ts","webpack:///./src/app/controller/addevent.component.ts","webpack:///./src/app/controller/alerts.component.ts","webpack:///./src/app/controller/dashboard.component.ts","webpack:///./src/app/controller/event.component.ts","webpack:///./src/app/controller/feature.component.ts","webpack:///./src/app/controller/fileUpload.component.ts","webpack:///./src/app/controller/login.component.ts","webpack:///./src/app/controller/register.component.ts","webpack:///./src/app/controller/weather.component.ts","webpack:///./src/app/model/userStory.ts","webpack:///./src/app/task/addtask.component.ts","webpack:///./src/app/task/task.component.ts","webpack:///./src/app/html/dashboard.html","webpack:///./src/app/html/weather.component.html","webpack:///./src/app/base/Component.action.ts","webpack:///./src/app/base/member.ts","webpack:///./src/app/service/feature.services.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, Input } from '@angular/core'\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { StoryService } from '../service/story.service'\r\nimport { UserStories } from '../model/userStory'\r\n@Component({\r\n    selector: 'stories',\r\n    template: `\r\n            \r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Hi there!</h4>\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n            <table class=\"table table-hover table-responsive table-bordered\" *ngIf=\"mode != 'addStories' \" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th >Title</th>\r\n                                <th >Descr</th>\r\n                                <th >Storypoint</th>\r\n                                <th >Area</th>\r\n                                <th >Sprint</th>\r\n                                <th >Tasks</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let story of userStories\">\r\n                                <td><a>{{story.title}}</a></td>\r\n                                <td>{{story.descr}}</td>\r\n                                <td>{{story.storypoint}}</td>\r\n                                <td>{{story.area}}</td>\r\n                                <td>{{story.sprint}}</td>\r\n                                <td *ngIf =\"story.task == null\" >0</td>\r\n                                <td *ngIf =\"story.task != null\" > {{story.task.length}} </td>\r\n                                \r\n                                \r\n                            </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n        </div>\r\n    \r\n    `\r\n})\r\n\r\nexport class StoryComponent {\r\n    @Input() featureId: string;\r\n    userStories: UserStories[];\r\n    constructor(public activeModal: NgbActiveModal, private storyService: StoryService) {\r\n\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/stories.component.ts","\r\nimport {UserStories} from '../model/userStory'\r\nexport class Features{\r\n    _id:string\r\n    title:String   \r\n    descr:String\r\n    created:Date\r\n    modified:Date\r\n    area:String\r\n    userstories: Array<UserStories> = [];\r\n    createdby  : String\r\n\r\n\r\n    constructor(title:string,desc:string){\r\n        this.title = title;\r\n        this.descr = desc;\r\n    }\r\n        \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/feature.ts","import {Injectable} from '@angular/core'\r\nimport {Http} from '@angular/http'\r\n@Injectable()\r\n\r\nexport class AddEventService{\r\n    constructor(private http:Http){\r\n\r\n    }\r\n    saveEvent(){\r\n           const eventData = \r\n                        {\r\n                            title:'test',\r\n                            descr:'test',\r\n                            place:'test',\r\n                            fees:123,\r\n                            tsk_title:'test',\r\n                            tsk_content:'test',\r\n                            tsk_price:'test'\r\n                            \r\n                        }\r\n        return this.http.post('http://localhost:3000/api/events/',eventData).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/addevent.service.ts","import {Injectable} from '@angular/core'\r\nimport {Http} from '@angular/http'\r\n@Injectable()\r\nexport class EventService{\r\n    constructor(private http:Http){\r\n        \r\n    }\r\n    getEvents(){\r\n        return this.http.get('/api/events/')\r\n        .map(result=>result.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/event.service.ts","import { Injectable } from '@angular/core'\r\nimport { Http } from '@angular/http'\r\n\r\n@Injectable()\r\nexport class StoryService {\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    getStories() {\r\n        return this.http.get('/api/userstory')\r\n            .map(result => result.json());\r\n    }\r\n\r\n    getStoriesByFeature(featureId: string) {\r\n        console.log('story service featureId :' + featureId);\r\n        return this.http.get('/api/userstory/'+featureId)\r\n            .map(result => result.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/story.service.ts","import {Injectable} from '@angular/core'\r\nimport {Task} from '../model/Task'\r\nimport {Http} from '@angular/http'\r\n@Injectable()\r\n\r\nexport class AddTaskService{\r\n    constructor(private http:Http){\r\n\r\n    }\r\n    addtask(task:Task){\r\n        // this.http.post()\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/task/addtask.service.ts","import {Injectable} from '@angular/core';\r\nimport {Http,Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class TaskService{\r\n\r\n    constructor(private http:Http){\r\n\r\n    }\r\n    getTask(){\r\n        return this.http.get('/api/task')\r\n        .map(result=>result.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/task/task.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 224;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 224\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { enableProdMode } from '@angular/core';\r\n\r\n// Enable production mode unless running locally\r\nif (!/localhost/.test(document.location.host)) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  template: `\r\n      \r\n        <router-outlet>    </router-outlet>\r\n        \r\n\r\n        ` \r\n})\r\nexport class AppComponent  {\r\n   name = 'Angular';\r\n   \r\n }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { TaskService } from '../app/task/task.service';\r\nimport { TaskComponent } from '../app/task/task.component';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes, Route } from '@angular/router';\r\nimport { AddNewTaskComponent } from './task/addtask.component';\r\nimport { EventComponent } from '../app/controller/event.component'\r\nimport { EventService } from '../app/service/event.service'\r\nimport { AddNewEventComponent } from '../app/controller/addevent.component'\r\nimport { AddEventService } from '../app/service/addevent.service'\r\nimport { WeatherComponent } from '../app/controller/weather.component'\r\nimport { LoginComponent } from '../app/controller/login.component'\r\nimport { RegisterComponent } from '../app/controller/register.component'\r\nimport { DashBoardcomponent } from '../app/controller/dashboard.component'\r\nimport { FeatureComponent } from '../app/controller/feature.component'\r\nimport { AddTaskService } from '../app/task/addtask.service'\r\nimport { FeatureServices } from '../app/service/feature.services'\r\nimport { FileUploadComponents } from '../app/controller/fileUpload.component'\r\nimport { AngularFireModule } from 'angularfire2'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddNewStoriesComponent } from './controller/add-new-stories.component';\r\nimport { AlertsComponent } from './controller/alerts.component'\r\nimport { StoryComponent } from './controller/stories.component'\r\nimport {StoryService} from './service/story.service'\r\n\r\n\r\n//index routing , redirect to login for the blank request\r\nconst indexRoutes: Route = {\r\n  path: '', component: LoginComponent\r\n}\r\n\r\n// for all invalid routers , it will redirect to login component\r\nconst fallbackRoutes = {\r\n  path: '**', component: LoginComponent\r\n}\r\n\r\n\r\n// order is important, routes get called on the order which they defined\r\nconst routes: Routes = [\r\n  indexRoutes,\r\n\r\n  { path: 'register', component: RegisterComponent },\r\n  {\r\n    path: 'dash', component: DashBoardcomponent,\r\n    children: [\r\n      {   // shows feature   as default\r\n        path: '',\r\n        redirectTo: 'feature',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'events',\r\n        component: EventComponent,\r\n        children: [\r\n          {\r\n            path: 'addevent',\r\n            component: AddNewEventComponent\r\n          }\r\n        ]\r\n      },\r\n\r\n      {\r\n        path: 'task',\r\n        component: TaskComponent,\r\n        children: [\r\n          {\r\n            path: 'addtask',\r\n            component: AddNewTaskComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'weather',\r\n        component: WeatherComponent\r\n      },\r\n      {\r\n        path: 'feature',\r\n        component: FeatureComponent,\r\n        children: [{\r\n          path: 'user-story',\r\n          component: AddNewStoriesComponent\r\n        }]\r\n      },\r\n      {\r\n        path: 'uploads',\r\n        component: FileUploadComponents,\r\n      }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(routes);\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDp5PfXL2nQWqrKumXCuYUQSgVpW8HX9_U\",\r\n  authDomain: \"tfsmean.firebaseapp.com\",\r\n  databaseURL: \"https://tfsmean.firebaseio.com\",\r\n  projectId: \"tfsmean\",\r\n  storageBucket: \"tfsmean.appspot.com\",\r\n  messagingSenderId: \"378897946454\"\r\n};\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    routing,\r\n    AngularFireModule.initializeApp(firebaseConfig),\r\n    NgbModule.forRoot()\r\n  ],\r\n  providers: [TaskService, EventService, AddEventService, AddTaskService, FeatureServices , StoryService],\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    TaskComponent,\r\n    AddNewTaskComponent,\r\n    EventComponent,\r\n    AddNewEventComponent,\r\n    WeatherComponent,\r\n    RegisterComponent,\r\n    DashBoardcomponent,\r\n    FeatureComponent,\r\n    FileUploadComponents,\r\n    AddNewStoriesComponent,\r\n    AlertsComponent,\r\n    StoryComponent\r\n  ],\r\n  entryComponents: [StoryComponent],\r\n  bootstrap: [\r\n    AppComponent\r\n  ],\r\n\r\n\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import * as firebase from 'firebase'\r\n\r\nclass firebaseConfig {\r\n    constructor() {\r\n        var config = {\r\n            apiKey: \"AIzaSyDp5PfXL2nQWqrKumXCuYUQSgVpW8HX9_U\",\r\n            authDomain: \"tfsmean.firebaseapp.com\",\r\n            databaseURL: \"https://tfsmean.firebaseio.com\",\r\n            projectId: \"tfsmean\",\r\n            storageBucket: \"tfsmean.appspot.com\",\r\n            messagingSenderId: \"378897946454\"\r\n        };\r\n        firebase.initializeApp(config);\r\n    }\r\n\r\n    addUser(email: string, password: string) {\r\n        return firebase.auth().createUserWithEmailAndPassword(email, password);\r\n    }\r\n    addToDatabase(child: string, id: string, obj: Object) {\r\n        return firebase.database().ref(child + '/' + id).set(obj);\r\n    }\r\n    addToStorage(child: string, fileName: string, file: File) {\r\n        return firebase.storage().ref(child + '/' + fileName).put(file);\r\n    }\r\n}\r\n\r\nexport { firebaseConfig };\n\n\n// WEBPACK FOOTER //\n// ./src/app/base/firebaseConfig.ts","export class systemConstant{\r\n    public static INSERT: string = \"insert\";\r\n    public static DELETE:string =  \"delete\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/base/systemConstant.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ComponentAction } from '../base/Component.action'\nimport { Features } from '../model/feature'\nimport { UserStories } from '../model/userStory'\nimport { FeatureServices } from '../service/feature.services'\nimport { systemConstant } from '../base/systemConstant'\n\n@Component({\n  selector: 'app-add-new-stories',\n  template: `\n  \n  <h3>Add Stories for Feature {{selectedFeature.title}}</h3>\n  <h4>No of Stories added to this Feature : {{selectedFeature.userstories.length }}</h4>\n\n\n <form  #userStoryForm=\"ngForm\" (ngSubmit)=\"addUserStory(userStoryForm)\">\n  <div class=\"form-group\">\n    <label for=\"title\">User Story Title</label>\n    <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\"  [(ngModel)]=userStory.title>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"descr\">User Story Desc</label>\n    <input type=\"text\" class=\"form-control\" id=\"descr\" name=\"descr\"  [(ngModel)]=userStory.descr>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"area\">User Story point</label>\n    <input type=\"text\" class=\"form-control\" id=\"storypoint\" name=\"storypoint\"  [(ngModel)]=userStory.storypoint>\n  </div> \n  <div class=\"form-group\">\n    <label for=\"area\">User Story Sprint</label>\n    <input type=\"text\" class=\"form-control\" id=\"sprint\" name=\"sprint\"  [(ngModel)]=userStory.sprint>\n  </div>                   \n  <div class=\"form-group\">\n    <label for=\"area\">User Story Area</label>\n    <input type=\"text\" class=\"form-control\" id=\"area\" name=\"area\"  [(ngModel)]=userStory.area>\n  </div> \n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n             \n</form>\n  \n  `\n})\nexport class AddNewStoriesComponent implements OnInit {\n\n  @Input() selectedFeature: Features;\n  userStory: UserStories = new UserStories(\"\", \"\");\n\n  @Output() onVoted = new EventEmitter<object>();\n\n  ngOnInit() {\n\n  }\n  constructor(private featureService: FeatureServices) {\n\n  }\n  addUserStory(form: NgForm) {\n    this.featureService.processUserStories(systemConstant.INSERT, this.userStory)\n      .subscribe(result => {\n        this.selectedFeature.userstories.push(result._id);\n        this.featureService.processFeature(systemConstant.INSERT, this.selectedFeature)\n          .subscribe(result => {\n            //this.onAlertAdded.emit({type: \"success\",message:\"user_story_added\"});\n            this.onVoted.emit({ type: \"success\", message: \"User story added Succesfully .\" });\n            this.userStory = new UserStories(\"\", \"\");\n          })\n\n      })\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/add-new-stories.component.ts","import { Component } from '@angular/core'\r\nimport { Event } from '../model/Event'\r\nimport { NgForm } from '@angular/forms';\r\nimport { Http } from '@angular/http'\r\nimport { AddEventService } from '../service/addevent.service'\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'newEvent',\r\n  template: `\r\n    \r\n    \r\n    <form>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\r\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleSelect1\">Example select</label>\r\n    <select class=\"form-control\" id=\"exampleSelect1\">\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleSelect2\">Example multiple select</label>\r\n    <select multiple class=\"form-control\" id=\"exampleSelect2\">\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </select>\r\n  </div>\r\n\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n    \r\n    `\r\n  //templateUrl:'../html/addevent.component.html'\r\n})\r\n\r\nexport class AddNewEventComponent {\r\n\r\n  event: Event;\r\n  // constructor(private http:Http){\r\n\r\n  // }\r\n  constructor(private addeventService: AddEventService) {\r\n\r\n  }\r\n  addEvent(form: NgForm) {\r\n    // const eventData = \r\n    //                 {\r\n    //                     title:form.value.title,\r\n    //                     descr:form.value.descr,\r\n    //                     place:form.value.place,\r\n    //                     fees:form.value.fees,\r\n    //                     tsk_title:form.value.tsk_title,\r\n    //                     tsk_content:form.value.tsk_content,\r\n    //                     tsk_price:form.value.tsk_price\r\n\r\n    //                 } \r\n\r\n    //     this.http.post('http://localhost:3000/api/events/',eventData)\r\n    //     .map(result=>JSON.stringify(result));\r\n    this.addeventService.saveEvent()\r\n      .subscribe(response => console.log('event added'))\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/addevent.component.ts","import { Component, Input, OnInit } from '@angular/core'\r\n@Component({\r\n    selector: 'alerts',\r\n    template: `\r\n    \r\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"alert.type == 'success' \">\r\n            <strong>{{alert.message}}</strong> \r\n        </div>\r\n        <div class=\"alert alert-info\" role=\"alert\"  *ngIf=\"alert.type == 'info' \">\r\n            <strong>{{alert.message}}</strong> \r\n        </div>\r\n        <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"alert.type == 'warning' \">\r\n            <strong>{{alert.message}}</strong> \r\n        </div>\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"alert.type == 'error' \">\r\n            <strong>{{alert.message}}</strong> \r\n        </div>\r\n            \r\n    `\r\n})\r\n\r\nexport class AlertsComponent implements OnInit {\r\n\r\n    @Input() alert: object;\r\n    showAlerts: boolean = false;\r\n    messageArray: Array<string> = [\"\"];\r\n    ngOnInit() {\r\n        \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/alerts.component.ts","import{Component} from '@angular/core'\r\nimport {ComponentAction} from '../base/Component.action'\r\n\r\n@Component({\r\n    moduleId:module.id,\r\n    selector:'dashboard',\r\n    /*template:`\r\n    \r\n    <body>\r\n      <link rel=\"stylesheet\" href=\"../../bower_components/bootstrap/dist/css/bootstrap.min.css\">\r\n      <link href=\"../css/dashboard.css\" rel=\"stylesheet\">\r\n        <nav class=\"navbar navbar-inverse navbar-fixed-top\">\r\n         <div class=\"container-fluid\">\r\n            <div class=\"navbar-header\">\r\n               <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\r\n               <span class=\"sr-only\">Toggle navigation</span>\r\n               <span class=\"icon-bar\"></span>\r\n               <span class=\"icon-bar\"></span>\r\n               <span class=\"icon-bar\"></span>\r\n               </button>\r\n               <a class=\"navbar-brand\" href=\"#\">MeanStack</a>\r\n            </div>\r\n            <div id=\"navbar\" class=\"navbar-collapse collapse\">\r\n               <ul class=\"nav navbar-nav navbar-right\">\r\n                  <li><a href=\"#\">Dashboard</a></li>\r\n                  <li><a href=\"#\">Settings</a></li>\r\n                  <li><a href=\"#\">Profile</a></li>\r\n                  <li><a href=\"#\">Help</a></li>\r\n               </ul>\r\n               <form class=\"navbar-form navbar-right\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Search...\">\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </nav>\r\n      <div class=\"container-fluid\">\r\n         <div class=\"row\">\r\n            <div class=\"col-sm-3 col-md-2 sidebar\">\r\n               <ul class=\"nav nav-sidebar\">\r\n                  <li class=\"active\"><a routerLink=\"events\">Events <span class=\"sr-only\">(current)</span></a></li>\r\n                  <li><a routerLink=\"task\">Task</a></li>\r\n                  <li><a routerLink=\"weather\">Weather</a></li>\r\n               </ul>\r\n            </div>\r\n            <div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\r\n                <!-- loads event component -->             \r\n               <router-outlet></router-outlet>\r\n            </div>\r\n         </div>\r\n      </div>\r\n    </body>\r\n    `*/\r\n    templateUrl:'../html/dashboard.html'\r\n    \r\n})\r\nexport class DashBoardcomponent extends ComponentAction {\r\n    user:String;\r\n    private sub: any;\r\n    constructor(){\r\n        super();\r\n        this.user = super.getMember().membername;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/dashboard.component.ts","import {Component} from '@angular/core'\r\nimport{Task} from '../model/Task'\r\nimport{Event} from '../model/Event'\r\nimport{EventService} from '../service/event.service'\r\nimport {Observable} from 'rxjs/Rx'\r\nimport 'rxjs/Rx'\r\n\r\n@Component({\r\n    moduleId:module.id,\r\n    selector:'event',\r\n    template:`\r\n    \r\n        <div>\r\n            <button routerLink=\"../events\" class=\"btn btn-primary\">All Events</button>\r\n            <button routerLink=\"addevent\" class=\"btn btn-primary\">Add Events</button>\r\n        </div>\r\n            <!-- loads child component list task and add new task -->\r\n            <router-outlet></router-outlet>\r\n\r\n                    <table class=\"table table-hover table-responsive table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Place</th>\r\n                                <th>Tasks</th>\r\n                                <th>Fees</th>\r\n                                <th>Description</th>\r\n                                <th>Created</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let evnt of events\">\r\n                                <td>{{evnt.title}}</td>\r\n                                <td>{{evnt.place}}</td>\r\n                                <td>{{evnt.task.title}}</td>\r\n                                <td>{{evnt.fees}}</td>\r\n                                <td>{{evnt.descr}}</td>\r\n                                <td>{{evnt.created}}</td>\r\n                                <td><a class='btn btn-info btn-xs' href=\"#\"><span class=\"glyphicon glyphicon-edit\"></span> Edit</a> <a href=\"#\" class=\"btn btn-danger btn-xs\"><span class=\"glyphicon glyphicon-remove\"></span> Del</a></td>\r\n                            </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n    `\r\n})\r\nexport class EventComponent{\r\nevents:Event[]\r\nmode:String = \"start\";\r\nconstructor(eventService:EventService){\r\n    eventService.getEvents()\r\n    .subscribe(result => {\r\n        this.events = result;\r\n    })\r\n\r\n  \r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/event.component.ts","import { Component, ViewChild, Input } from '@angular/core';\r\nimport { ModalComponent } from 'ng2-bs3-modal/ng2-bs3-modal';\r\nimport { FeatureServices } from '../service/feature.services'\r\nimport { ComponentAction } from '../base/Component.action'\r\nimport { Features } from '../model/feature'\r\nimport { NgForm } from '@angular/forms';\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddNewStoriesComponent } from './add-new-stories.component'\r\nimport { StoryComponent } from './stories.component'\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'feature',\r\n    template: `\r\n    \r\n        <alerts *ngIf=\"alertObj != null\" [alert]=\"alertObj\" ></alerts>\r\n        <div>\r\n            <button class=\"btn btn-primary\" (click)=\"listFeature()\">All Features</button>\r\n            <button class=\"btn btn-primary\" (click)=\"showAddFeature()\" >Add Features</button>\r\n        </div>\r\n        {{enableAddFeature}}\r\n            <!-- loads child component list task and add new task -->\r\n            <router-outlet></router-outlet>\r\n\r\n            <form *ngIf=\"mode == 'insert' || mode == 'update' \" #featureForm=\"ngForm\" (ngSubmit)=\"processFeature(featureForm)\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"title\">Feature Title</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" placeholder=\"Enter Feature Title\" [(ngModel)]=selectedFeature.title>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"descr\">Feature Title</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"descr\" name=\"descr\" placeholder=\"Enter Feature Description\" [(ngModel)]=selectedFeature.descr>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"area\">Feature Title</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"area\" name=\"area\" placeholder=\"Enter Feature Area\" [(ngModel)]=selectedFeature.area>\r\n                    </div>                   \r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    \r\n                </form>\r\n                <br/>\r\n                <app-add-new-stories  (onVoted)=\"showAlerts($event)\" [selectedFeature]=\"selectedFeature\" [hidden]=\"mode != 'addStories' \"></app-add-new-stories>\r\n\r\n                    <table class=\"table table-hover table-responsive table-bordered\" *ngIf=\"mode != 'addStories' \" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th >Title</th>\r\n                                <th >Descr</th>\r\n                                <th >Area</th>\r\n                                <th >User Stories</th>\r\n                                <th ></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let feature of features\">\r\n                                <td><a  href=\"javascript:void(0);\" (click)=addstories([feature._id])>{{feature.title}}</a></td>\r\n                                <td>{{feature.descr}}</td>\r\n                                <td>{{feature.area}}</td>\r\n                                <td *ngIf =\"feature.userstories == null\" >0</td>\r\n                                <td *ngIf =\"feature.userstories != null\" ><a href=\"javscript:void(0);\" (click)=\"open(feature._id)\" > {{feature.userstories.length}} </a> </td>\r\n                                <td><a class='btn btn-info btn-xs'  (click)=\"editFeature(feature._id)\"><span class=\"glyphicon glyphicon-edit\"></span> Edit</a> <a (click)=\"deleteFeature(feature)\" class=\"btn btn-danger btn-xs\"><span class=\"glyphicon glyphicon-remove\"></span> Del</a></td>\r\n                            </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n    <button type=\"button\"  *ngIf=\"mode != 'addStories' \" class=\"btn btn-default\" (click)=\"open()\">Open me!</button>\r\n\r\n    `\r\n\r\n})\r\n\r\nexport class FeatureComponent extends ComponentAction {\r\n\r\n    features: Features[]\r\n    mode: string = \"start\";\r\n    isEditMode = false;\r\n    selectedFeature: Features = new Features(\"\", \"\");\r\n    testNum: number = 2;\r\n    alertObj: object = null;\r\n\r\n    constructor(private featureService: FeatureServices, private modalService: NgbModal) {\r\n        super();\r\n        this.getFeatures();\r\n    }\r\n\r\n    getFeatures() {\r\n        this.featureService.getFeatures()\r\n            .subscribe(result => {\r\n                this.features = result;\r\n                console.log('features :' + JSON.stringify(this.features));\r\n            })\r\n    }\r\n\r\n    showAddFeature() {\r\n        this.selectedFeature = new Features(\"\", \"\");\r\n        this.mode = \"insert\";\r\n    }\r\n    listFeature() {\r\n        this.getFeatures();\r\n        this.mode = \"start\";\r\n    }\r\n    processFeature(form: NgForm) {\r\n        this.selectedFeature.createdby = super.getMember().memberId;\r\n        this.selectedFeature.created = new Date();\r\n        this.selectedFeature.modified = new Date();\r\n\r\n        this.featureService.processFeature(this.mode, this.selectedFeature)\r\n            .subscribe(result => {\r\n                // push to array only if insert mode  , otherwise it will make duplicates since we returning features from server for both insert and update (using feature.save())\r\n                if (this.mode == \"insert\") {\r\n                    this.features.push(result);\r\n                }\r\n\r\n            })\r\n    }\r\n    editFeature(featureId: string) {\r\n        this.selectedFeature = this.getFeature(featureId);\r\n        this.mode = \"update\";\r\n\r\n    }\r\n    deleteFeature(feature: Features) {\r\n        this.mode = \"delete\";\r\n        this.featureService.processFeature(this.mode, feature)\r\n            .subscribe(result => {\r\n                let index: number = this.features.indexOf(feature);\r\n                if (index !== -1) {\r\n                    this.features.splice(index, 1);\r\n                }\r\n            })\r\n    }\r\n\r\n    getFeature(featureId: string): Features {\r\n        var tempFeature: Features;\r\n        for (var i = 0; i < this.features.length; i++) {\r\n            tempFeature = this.features[i];\r\n            if (tempFeature._id == featureId) {\r\n                return tempFeature;\r\n            }\r\n        }\r\n    }\r\n\r\n    open(featureId) {\r\n        console.log('opening feature id:' + featureId);\r\n        const modalRef = this.modalService.open(StoryComponent);\r\n        modalRef.componentInstance.featureId = featureId;\r\n         this.featureService.getStoriesByFeature(featureId)\r\n            .subscribe(result => {\r\n                modalRef.componentInstance.userStories = result;\r\n            })        \r\n    }\r\n\r\n    addstories(featureId) {\r\n        this.selectedFeature = this.getFeature(featureId);\r\n        this.mode = \"addStories\";\r\n    }\r\n\r\n    showAlerts(alert: object) {\r\n        this.alertObj = alert;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/feature.component.ts","import { Component, Inject } from '@angular/core';\r\nimport * as firebase from 'firebase'\r\n\r\n@Component({\r\n    selector: 'uploads',\r\n    template: `\r\n                <script src=\"assets/js/upload.js\"></script>\r\n                 <link href=\"assets/css/upload.css\" rel=\"stylesheet\">\r\n                 <div class=\"fileupload fileupload-new\" data-provides=\"fileupload\">\r\n                    <span class=\"btn btn-primary btn-file\"><span class=\"fileupload-new\">Select file</span>\r\n                    <span class=\"fileupload-exists\">Change</span>         <input type=\"file\" id=\"file\" multiple (change)=\"fileChange($event)\" /></span>\r\n                    <span class=\"fileupload-preview\"></span>\r\n                    <a href=\"#\" class=\"close fileupload-exists\" data-dismiss=\"fileupload\" style=\"float: none\">×</a>\r\n                    <button type=\"button\" class=\"btn btn-default\">Upload</button>\r\n                </div>\r\n                <img src=\"{{image}}\"/>\r\n                \r\n                `\r\n\r\n})\r\nexport class FileUploadComponents {\r\n    image: string;\r\n    storage: firebase.storage.Storage\r\n    database: firebase.database.Database\r\n    snap: JSON\r\n    constructor() {\r\n        var config = {\r\n            apiKey: \"AIzaSyDp5PfXL2nQWqrKumXCuYUQSgVpW8HX9_U\",\r\n            authDomain: \"tfsmean.firebaseapp.com\",\r\n            databaseURL: \"https://tfsmean.firebaseio.com\",\r\n            projectId: \"tfsmean\",\r\n            storageBucket: \"tfsmean.appspot.com\",\r\n            messagingSenderId: \"378897946454\"\r\n        };\r\n        firebase.initializeApp(config);\r\n        this.storage = firebase.storage();\r\n        this.database = firebase.database();\r\n\r\n        var storageRef = this.storage.ref();\r\n\r\n        var imgRef = storageRef.child('images/Koala.jpg');\r\n        imgRef.getDownloadURL().then((url: any) => {\r\n            this.image = url\r\n        });\r\n    }\r\n\r\n    fileChange(event) {\r\n        let fileList: FileList = event.target.files;\r\n        for (var i = 0; i < fileList.length; i++) {\r\n            let file: File = fileList[i];\r\n            let formData: FormData = new FormData();\r\n            formData.append('uploadFile', file, file.name);\r\n\r\n            var storageRef = this.storage.ref();\r\n            var imgRef = storageRef.child('images/' + file.name);\r\n            imgRef.put(file).then((snapshot) => {\r\n                var metaData = {\r\n                    \"bucket\": snapshot.metadata.bucket, \"fullPath\": snapshot.metadata.fullPath,\r\n                    \"name\": snapshot.metadata.name, \"size\": snapshot.metadata.size,\r\n                    \"contentType\": snapshot.metadata.contentType,\r\n                    \"downloadURLs\": snapshot.metadata.downloadURLs[0]\r\n                }\r\n                this.database.ref('images/' + snapshot.metadata.generation).set(metaData);\r\n            });\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/fileUpload.component.ts","import {Component} from '@angular/core'\r\nimport {NgForm} from '@angular/forms'\r\nimport {Http} from '@angular/http'\r\nimport {Router} from '@angular/router'\r\nimport {ComponentAction} from '../base/Component.action'\r\nimport {Member} from '../base/member'\r\n@Component({\r\n    moduleId:module.id,\r\n    selector:'login',\r\n    template:`\r\n    \r\n        <link href=\"assets/css/signin.css\" rel=\"stylesheet\">\r\n       \r\n        <div class=\"alert alert-danger\" *ngIf=\"!isloggedIn\" role=\"alert\">\r\n            <strong>Oh snap!</strong> Not a valid user . Please try again.\r\n        </div>\r\n\r\n\r\n        <div class=\"container\" *ngIf=\"!register\">\r\n            <form #signinForm=\"ngForm\" class=\"form-signin\" (ngSubmit)=\"validate(signinForm)\" onsubmit=\"return false\">\r\n            <h2 class=\"form-signin-heading\">Please sign in</h2>\r\n            <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\r\n            <input type=\"email\" id=\"inputEmail\" name=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus ngModel>\r\n            <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n            <input type=\"password\" id=\"inputPassword\" name=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required ngModel>\r\n            <div class=\"checkbox\">\r\n                <label>\r\n                <input type=\"checkbox\" value=\"remember-me\"> Remember me\r\n                </label>\r\n            </div>\r\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n            <button type=\"button\" class=\"btn btn-link\" routerLink=\"/register\" >Create new Account</button>\r\n            </form>\r\n        </div>\r\n\r\n    `\r\n})\r\n\r\nexport class LoginComponent extends ComponentAction{\r\n    isloggedIn:boolean = true;\r\n    \r\n    constructor(private http :Http , private router:Router){\r\n        super();\r\n    }\r\n\r\n\r\n\r\n    validate(ngform:NgForm){\r\n        var user = ngform.value.inputEmail ;\r\n        this.http.post('/api/validate/login', {email:ngform.value.inputEmail,password:ngform.value.inputPassword})\r\n        .map(result => result.json())\r\n        .subscribe((result) => {\r\n            this.isloggedIn = result.isvalid;\r\n            let member = new Member(result.userID, user,result.isadmine);\r\n            super.setMember(member);\r\n            if(this.isloggedIn){\r\n                this.router.navigate(['./dash'])\r\n            }\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/login.component.ts","import { Component, Input, Output } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { Http } from '@angular/http'\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ComponentAction } from '../base/Component.action'\r\nimport { Member } from '../base/member'\r\nimport { firebaseConfig } from '../base/firebaseConfig'\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'signup',\r\n    template: `\r\n\r\n        <link href=\"assets/css/signin.css\" rel=\"stylesheet\">\r\n   \r\n        <div class=\"alert alert-danger fade in\" [class.hidden]=\"isSuccess\">\r\n            <a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a>\r\n            <strong>Error!</strong> This User Already Registered . please Sign in.\r\n        </div>\r\n        <div class=\"container\">\r\n            <form class=\"form-signin\" (ngSubmit)=\"register()\">\r\n                <h2 class=\"form-signin-heading\">Please sign Up</h2>\r\n                <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\r\n                <input type=\"email\" id=\"inputEmail\" name=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" [(ngModel)]=\"email\" required autofocus>\r\n                <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n                <input type=\"password\" id=\"inputPassword\" name=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"password\" required>\r\n                <label for=\"confirmpassword\" class=\"sr-only\">Password</label>\r\n                <input type=\"password\" id=\"confirmpassword\" name=\"confirmpassword\" class=\"form-control\" placeholder=\"Confirm Password\" required>\r\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign Up</button>\r\n                <button type=\"button\" class=\"btn btn-link\" routerLink=\"\" >Login</button>\r\n            </form>\r\n        </div>\r\n    \r\n    `\r\n})\r\n\r\n\r\n\r\n\r\nexport class RegisterComponent extends ComponentAction {\r\n\r\n    email: string;\r\n    password: string\r\n    isSuccess: boolean = true;\r\n    constructor(private http: Http, private router: Router) {\r\n        super();\r\n    }\r\n    register() {\r\n        this.http.post('api/validate/register/', { email: this.email, password: this.password })\r\n            .subscribe(\r\n            (response) => {\r\n                this.isSuccess = response.json().success;\r\n                if (this.isSuccess) {\r\n                    let member = new Member(this.email, \"false\", response.json().userID);//isadmine:false\r\n                    super.setMember(member);\r\n                    // add user to firebase\r\n                    let firebase = new firebaseConfig();\r\n                    const userObj = { \"userId\": response.json().userID, \"email\": this.email }\r\n                    firebase.addToDatabase('user', response.json().userID, userObj);\r\n                    firebase.addUser(this.email, this.password).catch(function (error) {\r\n                        var errorMessage = error.message;\r\n                        alert(errorMessage);\r\n                    });\r\n\r\n                    this.router.navigate(['./dash']);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/register.component.ts","import {Component} from '@angular/core'\r\nimport {Http} from '@angular/http'\r\n@Component({\r\n    moduleId:module.id,\r\n    selector:'weather',\r\n    templateUrl:'../html/weather.component.html'\r\n})\r\nexport class WeatherComponent{\r\n    address:string;\r\n    weatherObj:JSON;\r\n    isSuccess:boolean = false;\r\n    constructor(private http:Http){\r\n\r\n    }\r\n\r\n    getWeatherData(){\r\n        this.http.get(`/api/weather/${this.address}`)\r\n        .map((weather)=> weather.json())\r\n        .subscribe((weatherObj)=>{\r\n            this.weatherObj = weatherObj;\r\n            this.isSuccess  = true;\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controller/weather.component.ts","import {Task} from '../model/Task'\r\nexport class UserStories{\r\n   \r\n    title:string    \r\n    descr:string\r\n    created:Date\r\n    modified:Date\r\n    storypoint:number\r\n    assignTo:string\r\n    sprint:string\r\n    area:string\r\n    task:Array<Task>\r\n\r\n\r\n    constructor(title:string,desc:string){\r\n        this.title = title;\r\n        this.descr = desc;\r\n    }\r\n        \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/userStory.ts","import {Component} from '@angular/core'\r\nimport {NgForm} from '@angular/forms'\r\nimport {AddTaskService} from './addtask.service'\r\nimport {Task} from '../model/Task'\r\n@Component({\r\n    moduleId:module.id,\r\n    selector:'newtask',\r\n    template:`\r\n    \r\n        \r\n    <form>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\r\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleSelect1\">Example select</label>\r\n    <select class=\"form-control\" id=\"exampleSelect1\">\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleSelect2\">Example multiple select</label>\r\n    <select multiple class=\"form-control\" id=\"exampleSelect2\">\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleTextarea\">Example textarea</label>\r\n    <textarea class=\"form-control\" id=\"exampleTextarea\" rows=\"3\"></textarea>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputFile\">File input</label>\r\n    <input type=\"file\" class=\"form-control-file\" id=\"exampleInputFile\" aria-describedby=\"fileHelp\">\r\n    <small id=\"fileHelp\" class=\"form-text text-muted\">This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.</small>\r\n  </div>\r\n\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n    \r\n    `\r\n})\r\nexport class AddNewTaskComponent{\r\n\r\n    constructor(private addTaskService : AddTaskService){\r\n\r\n    }\r\n\r\n    addTask(form:NgForm){\r\n        // const task = new Task(form.value.title,false);\r\n        // this.addTaskService.addtask(task);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/task/addtask.component.ts","import {Component} from '@angular/core'\r\nimport {Task} from '../model/Task';\r\nimport {TaskService} from './task.service'\r\nimport {Observable} from 'rxjs/Rx';\r\nimport 'rxjs/Rx';\r\n\r\n@Component({\r\n    moduleId:module.id,\r\n    selector:'task',\r\n    template:`\r\n    \r\n        <div>\r\n            <button routerLink=\"../task\" class=\"btn btn-primary\">All Task</button>\r\n            <button routerLink=\"addtask\" class=\"btn btn-primary\">Add Task</button>\r\n        </div>\r\n            <!-- loads child component list task and add new task -->\r\n            <router-outlet></router-outlet>\r\n\r\n                    <table class=\"table table-hover table-responsive table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Activity</th>\r\n                                <th>Status</th>\r\n                                <th>AssignTo</th>\r\n                                <th>Sprint</th>\r\n                                <th>Hours</th>\r\n                                <th class=\"text-center\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tr *ngFor=\"let task of tasks\">\r\n                            <td>{{task.title}}</td>\r\n                            <td>{{task.activity}}</td>\r\n                            <td>{{task.status}}</td>\r\n                            <td>{{task.assignto}}</td>\r\n                            <td>{{task.sprint}}</td>\r\n                            <td>{{task.hours}}</td>\r\n                            <td class=\"text-center\"><a class='btn btn-info btn-xs' href=\"#\"><span class=\"glyphicon glyphicon-edit\"></span> Edit</a> <a href=\"#\" class=\"btn btn-danger btn-xs\"><span class=\"glyphicon glyphicon-remove\"></span> Del</a></td>\r\n                        </tr>\r\n                    </table>\r\n    `   \r\n})\r\n\r\nexport class TaskComponent{\r\ntasks:Task[];\r\n\r\nconstructor(private taskService:TaskService){\r\n    this.taskService.getTask().subscribe(tasks=>{\r\n        this.tasks = tasks;\r\n    });\r\n   \r\n    \r\n}\r\n\r\naddTask(){\r\n    \r\n}\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/task/task.component.ts","module.exports = \"\\r\\n<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n  <head>\\r\\n    <meta charset=\\\"utf-8\\\">\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\r\\n    <meta name=\\\"description\\\" content=\\\"\\\">\\r\\n    <meta name=\\\"author\\\" content=\\\"\\\">\\r\\n    <link rel=\\\"icon\\\" href=\\\"../../favicon.ico\\\">\\r\\n\\r\\n    <title>Dashboard Template for Bootstrap</title>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Custom styles for this template -->\\r\\n    <link href=\\\"assets/css/dashboard.css\\\" rel=\\\"stylesheet\\\">\\r\\n  </head>\\r\\n\\r\\n  <body>\\r\\n    <nav class=\\\"navbar navbar-toggleable-md navbar-inverse fixed-top bg-inverse\\\">\\r\\n      <button class=\\\"navbar-toggler navbar-toggler-right hidden-lg-up\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Dashboard</a>\\r\\n\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n          \\r\\n        </ul>\\r\\n        <form class=\\\"form-inline mt-2 mt-md-0\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\r\\n          <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </nav>\\r\\n\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <nav class=\\\"col-sm-3 col-md-2 hidden-xs-down bg-faded sidebar\\\">\\r\\n          <ul class=\\\"nav nav-pills flex-column\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link active\\\" [routerLink]=\\\"['feature']\\\">Features <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['task']\\\">Task</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['events']\\\">Events</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['weather']\\\">Weather</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['uploads']\\\">Upload</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </nav>\\r\\n\\r\\n        <main class=\\\"col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </main>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </body>\\r\\n</html>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/html/dashboard.html\n// module id = 319\n// module chunks = 1","module.exports = \"\\r\\n\\r\\n\\r\\n  <form class=\\\"navbar-form\\\" role=\\\"search\\\">\\r\\n    <div class=\\\"input-group add-on\\\">\\r\\n      <input class=\\\"form-control\\\" placeholder=\\\"Search\\\" name=\\\"srch-term\\\" id=\\\"srch-term\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address\\\" id=\\\"address\\\" name=\\\"address\\\">\\r\\n      <div class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\" (click)=\\\"getWeatherData()\\\"><i class=\\\"glyphicon glyphicon-search\\\"></i></button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n\\r\\n<!DOCTYPE html>\\r\\n<html lang=\\\"en\\\">\\r\\n<head>\\r\\n    <meta charset=\\\"utf-8\\\">\\r\\n    <!-- This file has been downloaded from Bootsnipp.com. Enjoy! -->\\r\\n    <title>Boostrap Weather + Display Flex - Bootsnipp.com</title>\\r\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\r\\n\\r\\n    <style type=\\\"text/css\\\">\\r\\n        body {\\r\\n    background: #f2f2f2;\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n\\tmargin: 0;\\r\\n\\tpadding: 95px 0;\\r\\n\\tfont-family: 'Source Sans Pro', sans-serif;\\r\\n\\tfont-weight: 200;\\r\\n}\\r\\n\\r\\n.row-no-gutter {\\r\\n\\tmargin-right: 0;\\r\\n\\tmargin-left: 0;\\r\\n}\\r\\n\\r\\n.row-no-gutter [class*=\\\"col-\\\"] {\\r\\n\\tpadding-right: 0;\\r\\n\\tpadding-left: 0;\\r\\n}\\r\\n\\r\\n\\r\\n#card {\\r\\n\\tbackground: #fff;\\r\\n\\tposition: relative;\\r\\n\\r\\n\\t-webkit-box-shadow: 0px 1px 10px 0px rgba(207,207,207,1);\\r\\n\\t-moz-box-shadow: 0px 1px 10px 0px rgba(207,207,207,1);\\r\\n\\tbox-shadow: 0px 1px 10px 0px rgba(207,207,207,1);\\r\\n\\r\\n\\t-webkit-transition: all 0.5s ease;\\r\\n\\t-moz-transition: all 0.5s ease;\\r\\n\\t-ms-transition: all 0.5s ease;\\r\\n\\t-o-transition: all 0.5s ease;\\r\\n\\ttransition: all 0.5s ease;\\t\\r\\n}\\r\\n\\r\\n.city-selected {\\r\\n\\tposition: relative;\\r\\n\\toverflow: hidden;\\r\\n\\tmin-height: 200px;\\r\\n\\tbackground: #3D6AA2;\\r\\n}\\r\\n\\r\\narticle {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 2;\\r\\n\\tcolor: #fff;\\r\\n\\tpadding: 20px;\\r\\n\\r\\n\\tdisplay: -ms-flexbox;\\r\\n\\tdisplay: -webkit-flex;\\r\\n\\tdisplay: flex;\\r\\n\\t-webkit-flex-direction: row;\\r\\n\\t-ms-flex-direction: row;\\r\\n\\tflex-direction: row;\\r\\n\\t-webkit-flex-wrap: wrap;\\r\\n\\t-ms-flex-wrap: wrap;\\r\\n\\tflex-wrap: wrap;\\r\\n\\t-webkit-justify-content: space-between;\\r\\n\\t-ms-flex-pack: justify;\\r\\n\\tjustify-content: space-between;\\r\\n\\t-webkit-align-content: flex-start;\\r\\n\\t-ms-flex-line-pack: start;\\r\\n\\talign-content: flex-start;\\r\\n\\t-webkit-align-items: flex-start;\\r\\n\\t-ms-flex-align: start;\\r\\n\\talign-items: flex-start;\\r\\n}\\r\\n\\r\\n.info .city,\\r\\n.night {\\r\\n\\tfont-size: 24px;\\r\\n\\tfont-weight: 200;\\r\\n\\tposition: relative;\\r\\n\\r\\n\\r\\n\\t-webkit-order: 0;\\r\\n\\t-ms-flex-order: 0;\\r\\n\\torder: 0;\\r\\n\\t-webkit-flex: 0 1 auto;\\r\\n\\t-ms-flex: 0 1 auto;\\r\\n\\tflex: 0 1 auto;\\r\\n\\t-webkit-align-self: auto;\\r\\n\\t-ms-flex-item-align: auto;\\r\\n\\talign-self: auto;\\r\\n}\\r\\n\\r\\n.info .city:after {\\r\\n\\tcontent: '';\\r\\n\\twidth: 15px;\\r\\n\\theight: 2px;\\r\\n\\tbackground: #fff;\\r\\n\\tposition: relative;\\r\\n\\tdisplay: inline-block;\\r\\n\\tvertical-align: middle;\\r\\n\\tmargin-left: 10px;\\r\\n}\\r\\n\\r\\n.city span {\\r\\n\\tcolor: #fff;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-weight: bold;\\r\\n\\r\\n\\ttext-transform: lowercase;\\r\\n\\ttext-align: left;\\r\\n}\\r\\n\\r\\n.night {\\r\\n\\tfont-size: 15px;\\r\\n\\ttext-transform: uppercase;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n\\twidth: 84px;\\r\\n\\theight: 84px;\\r\\n\\t-webkit-order: 0;\\r\\n\\t-ms-flex-order: 0;\\r\\n\\torder: 0;\\r\\n\\t-webkit-flex: 0 0 auto;\\r\\n\\t-ms-flex: 0 0 auto;\\r\\n\\tflex: 0 0 auto;\\r\\n\\t-webkit-align-self: center;\\r\\n\\t-ms-flex-item-align: center;\\r\\n\\talign-self: center;\\r\\n\\r\\n\\toverflow: visible;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.temp {\\r\\n\\tfont-size: 73px;\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\tfont-weight: bold;\\r\\n}\\r\\n\\r\\nsvg {\\r\\n\\tcolor: #fff;\\r\\n\\tfill: currentColor;\\r\\n}\\r\\n\\r\\n\\r\\n.wind svg {\\r\\n\\twidth: 18px;\\r\\n\\theight: 18px;\\r\\n\\tmargin-top: 20px;\\r\\n\\tmargin-right: 10px;\\r\\n\\tvertical-align: bottom;\\r\\n}\\r\\n\\r\\n.wind span {\\r\\n\\tfont-size: 13px;\\r\\n\\ttext-transform: uppercase;\\r\\n}\\r\\n\\r\\n.city-selected:hover figure {\\r\\n\\topacity: 0.4;\\r\\n}\\r\\n\\r\\n\\r\\nfigure {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    background-position: center;\\r\\n    background-size: cover;\\r\\n    opacity: 0.1;\\r\\n    z-index: 1;\\r\\n\\r\\n    -webkit-transition: all 0.5s ease;\\r\\n    -moz-transition: all 0.5s ease;\\r\\n    -ms-transition: all 0.5s ease;\\r\\n    -o-transition: all 0.5s ease;\\r\\n    transition: all 0.5s ease;\\r\\n}\\r\\n\\r\\n.days .row [class*=\\\"col-\\\"]:nth-child(2) .day  {\\r\\n    border-width: 0 1px 0 1px;\\r\\n    border-style: solid;\\r\\n    border-color: #eaeaea;\\r\\n}\\r\\n\\r\\n.days .row [class*=\\\"col-\\\"] {\\r\\n\\t-webkit-transition: all 0.5s ease;\\r\\n\\t-moz-transition: all 0.5s ease;\\r\\n\\t-ms-transition: all 0.5s ease;\\r\\n\\t-o-transition: all 0.5s ease;\\r\\n\\ttransition: all 0.5s ease;\\t\\r\\n}\\r\\n\\r\\n.days .row [class*=\\\"col-\\\"]:hover{\\r\\n\\tbackground: #eaeaea;\\r\\n}\\r\\n\\r\\n.day {\\r\\n\\tpadding: 10px 0px;\\r\\n\\ttext-align: center;\\r\\n\\r\\n}\\r\\n\\r\\n.day h1 {\\r\\n\\tfont-size: 14px;\\r\\n\\ttext-transform: uppercase;\\r\\n\\tmargin-top: 10px;\\r\\n}\\r\\n\\r\\n.day svg {\\r\\n\\tcolor: #000;\\r\\n\\twidth: 32px;\\r\\n\\theight: 32px;\\r\\n}\\r\\n    </style>\\r\\n \\r\\n</head>\\r\\n<body>\\r\\n    <div class=\\\"container\\\" *ngIf=\\\"isSuccess\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t<div id=\\\"card\\\" class=\\\"weater\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"city-selected\\\">\\r\\n\\t\\t\\t\\t\\t\\t<article>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"info\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"city\\\"><span>City:</span> {{weatherObj?.address}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"night\\\">{{weatherObj?.humidity}}</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"temp\\\">{{weatherObj?.temperature}}°C</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</article>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<figure style=\\\"background-image: url(http://136.243.1.253/~creolitic/bootsnipp/home.jpg)\\\"></figure>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n<script type=\\\"text/javascript\\\">\\r\\n\\r\\n</script>\\r\\n</body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/html/weather.component.html\n// module id = 320\n// module chunks = 1","import { Member } from './member'\r\nexport abstract class ComponentAction {\r\n    public static member: Member\r\n    constructor() {\r\n\r\n    }\r\n    setMember(member: Member) {\r\n        ComponentAction.member = member;\r\n    }\r\n    getMember() {\r\n        if (ComponentAction.member == null || typeof ComponentAction.member == 'undefined' ) {\r\n            return new Member(\"\", \"false\", \"\");\r\n        } else {\r\n            return ComponentAction.member;\r\n        }\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/base/Component.action.ts","export class Member{\r\n    memberId : String\r\n    membername:String\r\n    isadmine:String\r\n    constructor(memberId:String, name:String,admine:String){\r\n        this.memberId = memberId;\r\n        this.membername = name;\r\n        this.isadmine = admine;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/base/member.ts","import { Injectable } from '@angular/core'\r\nimport { Http } from '@angular/http'\r\nimport { Features } from '../model/feature'\r\nimport { UserStories } from '../model/userStory'\r\n@Injectable()\r\nexport class FeatureServices {\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    getFeatures() {\r\n        return this.http.get('/api/feature')\r\n            .map(result => result.json());\r\n    }\r\n    processFeature(mode: string, feature: Features) {\r\n        return this.http.post('/api/feature', { \"mode\": mode, \"feature\": feature })\r\n            .map(result => result.json());\r\n    }\r\n    processUserStories(mode: string, stories: UserStories) {\r\n        return this.http.post('/api/userstory', { \"mode\": mode, \"userstory\": stories })\r\n            .map(result => result.json());\r\n    }\r\n    getStoriesByFeature(featureId: string) {\r\n        console.log('story service featureId :' + featureId);\r\n        return this.http.get('/api/userstory/' + featureId)\r\n            .map(result => result.json());\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/feature.services.ts"],"sourceRoot":""}